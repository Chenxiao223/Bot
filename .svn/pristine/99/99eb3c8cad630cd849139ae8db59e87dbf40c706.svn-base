package com.zhiziyun.dmptest.bot.ui.fragment;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.design.widget.TabLayout;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.zhiziyun.dmptest.bot.R;
import com.zhiziyun.dmptest.bot.ui.activity.WeChatBindActivity;
import com.zhiziyun.dmptest.bot.util.CustomDialog;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;


/**
 * 推广
 */
public class GeneralizeFragment extends Fragment {
    private List<Fragment> list;
    private String[] titles;
    private SharedPreferences share;
    private ViewPager viewPager;
    private int positions = 0;

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        return inflater.inflate(R.layout.fragment_generalize, container, false);
    }

    @Override
    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        //
        initView();
    }

    public void initView() {
        share = getActivity().getSharedPreferences("logininfo", Context.MODE_PRIVATE);
        TabLayout tabLayout;
        MyAdapter adapter;
        viewPager = getView().findViewById(R.id.vp_view);
        tabLayout = getView().findViewById(R.id.tabs);
        if (share.getBoolean("isShowPlanAds", false)) {
            titles = new String[]{"投广告", "发短信", "朋友圈"};
        } else {
            titles = new String[]{"发短信", "朋友圈"};
        }

        //页面，数据源
        list = new ArrayList<>();
        if (share.getBoolean("isShowPlanAds", false)) {//登录时会获取这个布尔值，如果为false就隐藏
            list.add(new AdvertisingFragment());
        }
        list.add(new SMSFragment());
        list.add(new FriendsFragment());
        //ViewPager的适配器
        adapter = new MyAdapter(getChildFragmentManager(), list);
        viewPager.setAdapter(adapter);
        //绑定
        tabLayout.setupWithViewPager(viewPager);
        //Tab的点击事件
        for (int i = 0; i < tabLayout.getTabCount(); i++) {
            TabLayout.Tab tab = tabLayout.getTabAt(i);
            if (tab == null) return;
            //这里使用到反射，拿到Tab对象后获取Class
            Class c = tab.getClass();
            try {
                //Filed “字段、属性”的意思,c.getDeclaredField 获取私有属性。
                //"mView"是Tab的私有属性名称(可查看TabLayout源码),类型是 TabView,TabLayout私有内部类。
                Field field = c.getDeclaredField("mView");
                //值为 true 则指示反射的对象在使用时应该取消 Java 语言访问检查。值为 false 则指示反射的对象应该实施 Java 语言访问检查。
                //如果不这样会报如下错误
                // java.lang.IllegalAccessException:
                //Class com.test.accessible.Main
                //can not access
                //a member of class com.test.accessible.AccessibleTest
                //with modifiers "private"
                field.setAccessible(true);
                final View view = (View) field.get(tab);
                if (view == null) return;
                view.setTag(i);
                view.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        int position = (int) view.getTag();
                        //这里就可以根据业务需求处理点击事件了。
                        if (position == 2) {//如果点击的是朋友圈
                            //点击弹出对话框
                            final CustomDialog customDialog = new CustomDialog(getActivity());
                            customDialog.setTitle("绑定公众号");
                            customDialog.setMessage("您还没有绑定朋友圈广告投放的公众号，现在去绑定？");
                            customDialog.setYesOnclickListener("立即绑定", new CustomDialog.onYesOnclickListener() {
                                @Override
                                public void onYesClick() {
                                    startActivity(new Intent(getActivity(), WeChatBindActivity.class));
                                    customDialog.dismiss();
                                }
                            });
                            customDialog.setNoOnclickListener("暂不绑定", new CustomDialog.onNoOnclickListener() {
                                @Override
                                public void onNoClick() {
                                    viewPager.setCurrentItem(positions);//跳转
                                    customDialog.dismiss();
                                }
                            });
                            customDialog.show();
                        } else if (position == 0) {
                            positions = position;//跳转
                        } else if (position == 1) {
                            positions = position;//跳转
                        }
                    }
                });
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private class MyAdapter extends FragmentPagerAdapter {
        private List<Fragment> mFragments;

        public MyAdapter(FragmentManager fm, List<Fragment> fragments) {
            super(fm);
            this.mFragments = fragments;
        }

        @Override
        public Fragment getItem(int position) {
            return list.get(position);
        }

        @Override
        public int getCount() {
            return list.size();
        }

        //重写这个方法，将设置每个Tab的标题
        @Override
        public CharSequence getPageTitle(int position) {
            return titles[position];
        }
    }

    @Override
    public void onDetach() {
        super.onDetach();
        try {
            Field childFragmentManager = Fragment.class
                    .getDeclaredField("mChildFragmentManager");
            childFragmentManager.setAccessible(true);
            childFragmentManager.set(this, null);
        } catch (NoSuchFieldException e) {
            throw new RuntimeException(e);
        } catch (IllegalAccessException e) {
            throw new RuntimeException(e);
        }
    }

}
