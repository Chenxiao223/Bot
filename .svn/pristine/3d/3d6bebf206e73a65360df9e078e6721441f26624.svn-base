package com.zhiziyun.dmptest.bot.ui.activity;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.telephony.TelephonyManager;
import android.util.Log;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;

import com.zhiziyun.dmptest.bot.R;
import com.zhiziyun.dmptest.bot.util.BaseUrl;
import com.zhiziyun.dmptest.bot.util.MyDialog;
import com.zhiziyun.dmptest.bot.util.NoDoubleClickListener;
import com.zhiziyun.dmptest.bot.util.ToastUtils;
import com.zhiziyun.dmptest.bot.util.Token;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.FormBody;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 * Created by Administrator on 2017/11/17.
 * 登录页面
 */

public class LoginActivity extends BaseActivity {
    private EditText tv_username, tv_password;
    private LinearLayout traceroute_rootview;
    SharedPreferences.Editor editors;
    private MyDialog dialog;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        initView();
    }

    private void initView() {
        //设置系统栏颜色
        ImageView iv_system = (ImageView) findViewById(R.id.iv_system);
        LinearLayout.LayoutParams params = (LinearLayout.LayoutParams) iv_system.getLayoutParams();
        params.height = (int) getStatusBarHeight(this);//设置当前控件布局的高度

        SharedPreferences sharedPreferences = getSharedPreferences("logininfo", Context.MODE_PRIVATE);
        editors = sharedPreferences.edit();

        tv_username = (EditText) findViewById(R.id.edit_username);
        tv_password = (EditText) findViewById(R.id.edit_password);
        tv_username.setText(getemail());
        tv_username.setSelection(getemail().length());//将光标定位到最后
        tv_password.setText(getpassword());
        traceroute_rootview = (LinearLayout) findViewById(R.id.traceroute_rootview);
        traceroute_rootview.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                //让软键盘隐藏
                InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                imm.hideSoftInputFromWindow(view.getApplicationWindowToken(), 0);
            }
        });
        //点击登录
        findViewById(R.id.btn_login).setOnClickListener(new NoDoubleClickListener() {
            @Override
            public void onMultiClick(View v) {
                if (tv_username.getText().toString().equals("")) {
                    tv_username.setError("账号不能为空！");
                } else if (tv_password.getText().toString().equals("")) {
                    tv_password.setError("密码不能为空！");
                } else {
                    editors.putString("email", tv_username.getText().toString());
                    editors.putString("password", tv_password.getText().toString());
                    recordLogin();
                    Login();
                }
            }
        });
    }

    public String getemail() {
        SharedPreferences shared = getSharedPreferences("logininfo", Context.MODE_PRIVATE);
        return shared.getString("email", "");
    }

    public String getpassword() {
        SharedPreferences shared = getSharedPreferences("logininfo", Context.MODE_PRIVATE);
        return shared.getString("password", "");
    }

    public void Login() {
        //加载动画
        dialog = MyDialog.showDialog(this);
        dialog.SHOW();
        //登录
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    OkHttpClient client = new OkHttpClient();
                    RequestBody body = new FormBody.Builder()
                            .add("email", tv_username.getText().toString())
                            .add("password", tv_password.getText().toString()).build();
                    final Request request = new Request.Builder()
                            .url(BaseUrl.BaseLogin)
                            .post(body)
                            .build();

                    client.newCall(request).enqueue(new Callback() {
                        @Override
                        public void onFailure(Call call, IOException e) {

                        }

                        @Override
                        public void onResponse(Call call, Response response) throws IOException {
                            try {
                                JSONObject json = new JSONObject(response.body().string());
                                if (json.get("success").toString().equals("true")) {//返回为true表示登录成功
                                    editors.putString("accountid", json.get("accountid").toString());
                                    editors.putString("siteid", json.get("siteid").toString());
                                    editors.putString("company", json.get("company").toString());
                                    editors.putString("logourl", json.get("logourl").toString());
                                    editors.commit();//提交
                                    startActivity(new Intent(LoginActivity.this, HomePageActivity.class));
                                    finish();
                                    dialog.dismiss();
                                } else {
                                    handler.sendEmptyMessage(1);
                                }
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }

                        }
                    });

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }).start();
    }

    Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what) {
                case 1:
                    dialog.dismiss();
                    ToastUtils.showShort(LoginActivity.this, "账号或密码错误");
                    break;
            }
        }
    };

    public void recordLogin() {
        //记录用户登录
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    final JSONObject json = new JSONObject();
                    json.put("siteid", "0zoTLi29XRgq");
                    json.put("zzid", "0zoTLha93ySI");//广告活动编号
                    json.put("appid", "4324321");//应用编号
                    TelephonyManager telephonyManager = (TelephonyManager) LoginActivity.this.getSystemService(LoginActivity.this.TELEPHONY_SERVICE);
                    String imei = telephonyManager.getDeviceId();
                    json.put("imei",imei);
                    json.put("who", "");//注册用户编号
                    json.put("idfa", "");
                    json.put("idfy", "");
                    json.put("channelid", "");//渠道id
                    json.put("os",0);//系统安桌是0
                    OkHttpClient client = new OkHttpClient();
                    String url = null;
                    try {
                        url = json.toString();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    MediaType mediaType = MediaType.parse("application/x-www-form-urlencoded");
                    RequestBody body = RequestBody.create(mediaType, url);
                    final Request request = new Request.Builder()
                            .url(BaseUrl.BaseJiang + "logup")
                            .addHeader("apiid", "0zoTLi29XRgq")
                            .addHeader("token", URLEncoder.encode(Token.gettoken2(), "utf-8"))
                            .addHeader("content-type", "application/x-www-form-urlencoded")
                            .post(body)
                            .build();

                    client.newCall(request).enqueue(new Callback() {
                        @Override
                        public void onFailure(Call call, IOException e) {
                            Log.i("response", "登录返回：" + e.toString());
                        }

                        @Override
                        public void onResponse(Call call, Response response) throws IOException {
                            Log.i("response", "登录返回：" + response.body().string());
                        }
                    });

                } catch (Exception e) {
                    Log.i("response",e.toString());
                    e.printStackTrace();
                }
            }
        }).start();
    }
}
