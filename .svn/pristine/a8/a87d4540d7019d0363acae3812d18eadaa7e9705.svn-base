package com.zhiziyun.dmptest.bot.ui.activity;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.os.Bundle;
import android.os.CountDownTimer;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.zhiziyun.dmptest.bot.R;
import com.zhiziyun.dmptest.bot.util.BaseUrl;
import com.zhiziyun.dmptest.bot.util.MyDialog;
import com.zhiziyun.dmptest.bot.util.ToastUtils;
import com.zhiziyun.dmptest.bot.util.Token;

import org.json.JSONObject;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;


/**
 * Created by Administrator on 2018/5/7.
 * 修改绑定号码
 */

public class EditPhoneNMActivity extends BaseActivity implements View.OnClickListener {
    private EditText edit_phone_number, et_verifyCode;
    private Intent intent;
    private SharedPreferences.Editor editors;
    private TextView tv_getcode;
    private TimeCount time;
    private MyDialog dialog;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_phone_number);
        initView();
    }

    private void initView() {
        //设置系统栏颜色
        ImageView iv_system = (ImageView) findViewById(R.id.iv_system);
        LinearLayout.LayoutParams params = (LinearLayout.LayoutParams) iv_system.getLayoutParams();
        params.height = (int) getStatusBarHeight(this);//设置当前控件布局的高度

        intent = getIntent();
        dialog = MyDialog.showDialog(this);
        time = new TimeCount(60000, 1000);
        edit_phone_number = (EditText) findViewById(R.id.edit_phone_number);
        et_verifyCode = findViewById(R.id.et_verifyCode);
        edit_phone_number.setText(intent.getStringExtra("phoneNM"));

        tv_getcode = findViewById(R.id.tv_getcode);
        tv_getcode.setOnClickListener(this);

        findViewById(R.id.iv_back).setOnClickListener(this);
        findViewById(R.id.btn_commit).setOnClickListener(this);
        findViewById(R.id.page).setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.iv_back:
                toFinish();
                finish();
                break;
            case R.id.btn_commit:
                String text = edit_phone_number.getText().toString();
                if (!TextUtils.isEmpty(text)) {
                    if (isMobile(text)) {
                        verify(Long.parseLong(text), et_verifyCode.getText().toString(), text);
                    } else {
                        ToastUtils.showShort(EditPhoneNMActivity.this, "手机号不合法");
                    }
                } else {
                    ToastUtils.showShort(EditPhoneNMActivity.this, "请输入电话号码");
                }
                break;
            case R.id.page:
                //隐藏软键盘
                InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
                break;
            case R.id.tv_getcode:
                et_verifyCode.setText("");
                String phone = edit_phone_number.getText().toString();
                if (!TextUtils.isEmpty(phone)) {
                    if (isMobile(phone)) {
                        time.start();
                        //通过比对包名来判断用的是哪个APP
                        if (getPackageName().equals("com.zhiziyun.dmptest.bot")) {
                            verifyCode(Long.parseLong(phone), true);//如果是智子盒子就传true
                        } else if (getPackageName().equals("com.zhiziyun.dmptest.tkb")) {
                            verifyCode(Long.parseLong(phone), false);//如果是探客宝就传false
                        }
                    } else {
                        ToastUtils.showShort(EditPhoneNMActivity.this, "手机号不合法");
                    }
                } else {
                    ToastUtils.showShort(EditPhoneNMActivity.this, "请输入电话号码");
                }
                break;
        }
    }

    public void verify(final Long phone, final String code, final String text) {
        dialog.show();
        //验证短信验证码
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    final JSONObject json = new JSONObject();
                    json.put("phoneNo", phone);
                    json.put("code", code);
                    OkHttpClient client = new OkHttpClient();
                    String url = null;
                    try {
                        url = "agentid=1&token=" + URLEncoder.encode(Token.gettoken(), "utf-8") + "&json=" + json.toString();
                    } catch (UnsupportedEncodingException e) {
                        e.printStackTrace();
                    }
                    MediaType mediaType = MediaType.parse("application/x-www-form-urlencoded");
                    RequestBody body = RequestBody.create(mediaType, url);
                    final Request request = new Request.Builder()
                            .url(BaseUrl.BaseTest + "verifyCode/verify")
                            .post(body)
                            .addHeader("content-type", "application/x-www-form-urlencoded")
                            .build();

                    client.newCall(request).enqueue(new Callback() {
                        @Override
                        public void onFailure(Call call, IOException e) {

                        }

                        @Override
                        public void onResponse(Call call, Response response) throws IOException {
                            try {
                                JSONObject json = new JSONObject(response.body().string());
                                //如果请求失败就显示原因
                                Message msg = new Message();
                                if (json.get("obj").toString().equals("false")) {
                                    msg.what = 1;
                                    msg.obj = json.get("msg").toString();
                                } else {
                                    msg.what = 2;
                                    msg.obj = text;
                                }
                                handler.sendMessage(msg);
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                    });

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }).start();
    }

    public void verifyCode(final Long phone, final boolean b) {//传true则会使用盒子模板发送短信验证码，否则使用探客宝模板发送短信验证码
        //发送短信验证码
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    final JSONObject json = new JSONObject();
                    json.put("phoneNo", phone);
                    json.put("hezi", b);
                    OkHttpClient client = new OkHttpClient();
                    String url = null;
                    try {
                        url = "agentid=1&token=" + URLEncoder.encode(Token.gettoken(), "utf-8") + "&json=" + json.toString();
                    } catch (UnsupportedEncodingException e) {
                        e.printStackTrace();
                    }
                    MediaType mediaType = MediaType.parse("application/x-www-form-urlencoded");
                    RequestBody body = RequestBody.create(mediaType, url);
                    final Request request = new Request.Builder()
                            .url(BaseUrl.BaseTest + "verifyCode/send")
                            .post(body)
                            .addHeader("content-type", "application/x-www-form-urlencoded")
                            .build();

                    client.newCall(request).enqueue(new Callback() {
                        @Override
                        public void onFailure(Call call, IOException e) {

                        }

                        @Override
                        public void onResponse(Call call, Response response) throws IOException {
                            try {
                                JSONObject json = new JSONObject(response.body().string());
                                //如果请求失败就显示原因
                                if (json.get("success").toString().equals("false")) {
                                    Message msg = new Message();
                                    msg.what = 1;
                                    msg.obj = json.get("msg").toString();
                                    handler.sendMessage(msg);
                                }
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                    });

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }).start();
    }

    Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what) {
                case 1:
                    try {
                        ToastUtils.showShort(EditPhoneNMActivity.this, msg.obj.toString());
                        dialog.dismiss();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    break;
                case 2:
                    try {
                        ToastUtils.showShort(EditPhoneNMActivity.this, "修改成功");
                        dialog.dismiss();
                        String text = msg.obj.toString();
                        saveTel(text);
                        if (intent.getIntExtra("flag", 0) == 123) {//如果是从设置页面进来就执行
                            SettingActivity.activity.tv_phone_number.setText(text);
                        }
                        toFinish();
                        finish();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    break;
            }
        }
    };

    public void saveTel(String tel) {
        SharedPreferences sharedPreferences = getSharedPreferences("phone", Context.MODE_PRIVATE);
        editors = sharedPreferences.edit();
        editors.putString("tel", tel);
        editors.commit();//提交
    }

    /**
     * 验证手机格式
     */
    public static boolean isMobile(String number) {
    /*
    移动：134、135、136、137、138、139、150、151、152、157(TD)、158、159、178(新)、182、184、187、188
    联通：130、131、132、152、155、156、185、186
    电信：133、153、170、173、177、180、181、189、（1349卫通）
    总结起来就是第一位必定为1，第二位必定为3或5或8，其他位置的可以为0-9
    */
        //"[1]"代表第1位为数字1，"[34578]"代表第二位可以为3、4、5、7、8中的一个，"\\d{9}"代表后面是可以是0～9的数字，有9位。
        String num = "^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\\d{8}$";
        if (TextUtils.isEmpty(number)) {
            return false;
        } else {
            //matches():字符串是否在给定的正则表达式匹配
            return number.matches(num);
        }
    }

    class TimeCount extends CountDownTimer {

        public TimeCount(long millisInFuture, long countDownInterval) {
            super(millisInFuture, countDownInterval);
        }

        @Override
        public void onTick(long millisUntilFinished) {
//            tv_getcode.setBackgroundColor(Color.parseColor("#B6B6D8"));
            tv_getcode.setClickable(false);
            tv_getcode.setText("(" + millisUntilFinished / 1000 + ") 秒后可重新发送");
        }

        @Override
        public void onFinish() {
            tv_getcode.setText("重新获取验证码");
            tv_getcode.setClickable(true);
            tv_getcode.setBackgroundColor(Color.parseColor("#ffffff"));
        }
    }


    @Override
    public void onBackPressed() {
        toFinish();
        finish();
    }

    //清空内存
    private void toFinish() {
        new Handler().postDelayed(new Runnable() {
            @Override
            public void run() {
                try {
                    edit_phone_number = null;
                    System.gc();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }, 500);
    }

}
