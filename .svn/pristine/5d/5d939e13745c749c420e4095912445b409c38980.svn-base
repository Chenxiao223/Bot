package com.zhiziyun.dmptest.bot.ui.activity;

import android.Manifest;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.support.v4.content.ContextCompat;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.zhiziyun.dmptest.bot.R;
import com.zhiziyun.dmptest.bot.util.BaseUrl;
import com.zhiziyun.dmptest.bot.util.Token;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.net.URLEncoder;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.FormBody;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 * Created by Administrator on 2018/5/10.
 */

public class SettingActivity extends BaseActivity implements View.OnClickListener {
    public static SettingActivity activity;
    public TextView tv_phone_number, tv_version;
    private RelativeLayout rl_mac;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_setting);
        initView();
    }

    private void initView() {
        //设置系统栏颜色
        ImageView iv_system = (ImageView) findViewById(R.id.iv_system);
        LinearLayout.LayoutParams params = (LinearLayout.LayoutParams) iv_system.getLayoutParams();
        params.height = (int) getStatusBarHeight(this);//设置当前控件布局的高度

        activity = this;
        tv_phone_number = (TextView) findViewById(R.id.tv_phone_number);
        tv_version = (TextView) findViewById(R.id.tv_version);
        tv_version.setText(BaseUrl.BaseVersion);

        findViewById(R.id.iv_back).setOnClickListener(this);
        findViewById(R.id.rl_phone_number).setOnClickListener(this);
        findViewById(R.id.btn_commit).setOnClickListener(this);
        findViewById(R.id.rl_version).setOnClickListener(this);
        rl_mac = findViewById(R.id.rl_mac);
        rl_mac.setOnClickListener(this);
        if (TextUtils.isEmpty(getTel())) {
            //如果没有填号码就从手机获取，否则从缓存获取
            tv_phone_number.setText(getphoneNM());
        } else {
            tv_phone_number.setText(getTel());
        }
        isHidden();
    }

    public String getTel() {
        SharedPreferences shared = SettingActivity.this.getSharedPreferences("phone", Context.MODE_PRIVATE);
        return shared.getString("tel", "");
    }

    public String getphoneNM() {
        try {
            //判断是否为android6.0系统版本，如果是，需要动态添加权限
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                if (ContextCompat.checkSelfPermission(SettingActivity.this, Manifest.permission.CALL_PHONE) == PackageManager.PERMISSION_GRANTED) {
                    //有权限才执行
                    TelephonyManager telephonyManager = (TelephonyManager) SettingActivity.this.getSystemService(SettingActivity.this.TELEPHONY_SERVICE);
                    final String te1 = telephonyManager.getLine1Number();//获取本机号码
                    return te1.replace("+86", "");
                }
            } else {//6.0以下版本直接获取
                TelephonyManager telephonyManager = (TelephonyManager) SettingActivity.this.getSystemService(SettingActivity.this.TELEPHONY_SERVICE);
                final String te1 = telephonyManager.getLine1Number();//获取本机号码
                return te1.replace("+86", "");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "";
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.iv_back:
                finish();
                break;
            case R.id.rl_phone_number:
                Intent it = new Intent(SettingActivity.this, EditPhoneNMActivity.class);
                it.putExtra("phoneNM", tv_phone_number.getText().toString());
                startActivityForResult(it, 543);
                break;
            case R.id.btn_commit:
                finish();
                clear();
                HomePageActivity.activity.finish();
                startActivity(new Intent(SettingActivity.this, LoginActivity.class));
                break;
            case R.id.rl_version:
                break;
            case R.id.rl_mac:
                startActivity(new Intent(SettingActivity.this, MacDeviceActivity.class));
                break;
        }
    }

    public void isHidden() {
        //短信活动创建接口
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    OkHttpClient client = new OkHttpClient();
                    RequestBody body = new FormBody.Builder()
                            .add("device", "android").build();
                    final Request request = new Request.Builder()
                            .url(BaseUrl.BaseZhang + "loginuser/getVisibleDevices")
                            .post(body)
                            .build();

                    client.newCall(request).enqueue(new Callback() {
                        @Override
                        public void onFailure(Call call, IOException e) {
                        }

                        @Override
                        public void onResponse(Call call, Response response) throws IOException {
                            try {
                                TelephonyManager telephonyManager = (TelephonyManager) SettingActivity.this.getSystemService(SettingActivity.this.TELEPHONY_SERVICE);
                                String imei = telephonyManager.getDeviceId();
                                JSONArray jsonArray = new JSONArray(response.body().string());
                                for (int i = 0; i < jsonArray.length(); i++) {
                                    if (imei.equals(jsonArray.get(i).toString())) {
                                        handler.sendEmptyMessage(1);
                                    }
                                }
                            } catch (Exception e) {
                                e.printStackTrace();
                            }

                        }
                    });

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }).start();
    }

    Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what) {
                case 1:
                    rl_mac.setVisibility(View.VISIBLE);
                    break;
            }
        }
    };

    public void clear() {
        SharedPreferences sharedPreferences = getSharedPreferences("logininfo", Context.MODE_PRIVATE);
        SharedPreferences.Editor editors = sharedPreferences.edit();
        editors.putString("email", "");
        editors.putString("password", "");
        editors.commit();//提交
    }
}
