package com.zhiziyun.dmptest.bot.ui.activity;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.IdRes;
import android.support.annotation.Nullable;
import android.view.Gravity;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.zhiziyun.dmptest.bot.R;
import com.zhiziyun.dmptest.bot.ui.fragment.CustomerFragment;
import com.zhiziyun.dmptest.bot.util.BaseUrl;
import com.zhiziyun.dmptest.bot.util.MyDialog;
import com.zhiziyun.dmptest.bot.util.ToastUtils;
import com.zhiziyun.dmptest.bot.util.Token;

import org.json.JSONObject;

import java.io.IOException;
import java.net.URLEncoder;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 * Created by Administrator on 2018/4/4.
 * 客户详情
 */

public class DetailsActivity extends BaseActivity implements View.OnClickListener {
    private TextView tv_desc, tv_charger, tv_user, tv_type, tv_mark;
    private String m_mark = "";
    private String m_type = "";
    private Intent intent;
    private RelativeLayout rl_desc, rl_charger, rl_user, rl_type, rl_mark, rl_record;
    private RadioGroup rg_type, rg_mark;
    private RadioButton rb_ordinary, rb_low_value, rb_positive, rb_high_value, rb_new_turn, rb_temporarily_not_to, rb_continue_further, rb_submitted;
    private MyDialog dialog;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_details);
        initView();
    }

    private void initView() {
        //设置系统栏颜色
        ImageView iv_system = (ImageView) findViewById(R.id.iv_system);
        LinearLayout.LayoutParams params = (LinearLayout.LayoutParams) iv_system.getLayoutParams();
        params.height = (int) getStatusBarHeight(this);//设置当前控件布局的高度

        intent = getIntent();
        tv_type = (TextView) findViewById(R.id.tv_type);
        tv_mark = (TextView) findViewById(R.id.tv_mark);

        findViewById(R.id.rl_desc).setOnClickListener(this);
        findViewById(R.id.rl_charger).setOnClickListener(this);
        findViewById(R.id.rl_user).setOnClickListener(this);
        findViewById(R.id.rl_type).setOnClickListener(this);
        findViewById(R.id.rl_mark).setOnClickListener(this);
        findViewById(R.id.rl_record).setOnClickListener(this);

        rg_type = (RadioGroup) findViewById(R.id.rg_type);
        rg_mark = (RadioGroup) findViewById(R.id.rg_mark);
        rb_ordinary = (RadioButton) findViewById(R.id.rb_ordinary);
        rb_ordinary.setPadding(15, 5, 15, 5);
        rb_ordinary.setBackgroundResource(R.drawable.shape_sel);
        rb_ordinary.setGravity(Gravity.CENTER);

        rb_low_value = (RadioButton) findViewById(R.id.rb_low_value);
        rb_low_value.setPadding(15, 5, 15, 5);
        rb_low_value.setBackgroundResource(R.drawable.shape_sel);
        rb_low_value.setGravity(Gravity.CENTER);

        rb_positive = (RadioButton) findViewById(R.id.rb_positive);
        rb_positive.setPadding(15, 5, 15, 5);
        rb_positive.setBackgroundResource(R.drawable.shape_sel);
        rb_positive.setGravity(Gravity.CENTER);

        rb_high_value = (RadioButton) findViewById(R.id.rb_high_value);
        rb_high_value.setPadding(15, 5, 15, 5);
        rb_high_value.setBackgroundResource(R.drawable.shape_sel);
        rb_high_value.setGravity(Gravity.CENTER);

        rb_new_turn = (RadioButton) findViewById(R.id.rb_new_turn);
        rb_new_turn.setPadding(15, 5, 15, 5);
        rb_new_turn.setBackgroundResource(R.drawable.shape_sel);
        rb_new_turn.setGravity(Gravity.CENTER);

        rb_temporarily_not_to = (RadioButton) findViewById(R.id.rb_temporarily_not_to);
        rb_temporarily_not_to.setPadding(15, 5, 15, 5);
        rb_temporarily_not_to.setBackgroundResource(R.drawable.shape_sel);
        rb_temporarily_not_to.setGravity(Gravity.CENTER);

        rb_continue_further = (RadioButton) findViewById(R.id.rb_continue_further);
        rb_continue_further.setPadding(15, 5, 15, 5);
        rb_continue_further.setBackgroundResource(R.drawable.shape_sel);
        rb_continue_further.setGravity(Gravity.CENTER);

        rb_submitted = (RadioButton) findViewById(R.id.rb_submitted);
        rb_submitted.setPadding(15, 5, 15, 5);
        rb_submitted.setBackgroundResource(R.drawable.shape_sel);
        rb_submitted.setGravity(Gravity.CENTER);

        showState(intent.getStringExtra("type"), intent.getStringExtra("mark"));

        rg_type.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(RadioGroup group, @IdRes int checkedId) {
                RadioButton checkRadioButton = (RadioButton) group.findViewById(checkedId);
                m_type = checkRadioButton.getText().toString();
            }
        });

        rg_mark.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(RadioGroup group, @IdRes int checkedId) {
                RadioButton checkRadioButton = (RadioButton) group.findViewById(checkedId);
                m_mark = checkRadioButton.getText().toString();
            }
        });

        tv_desc = (TextView) findViewById(R.id.tv_desc);
        tv_desc.setText(intent.getStringExtra("desc"));
        tv_charger = (TextView) findViewById(R.id.tv_charger);
        tv_charger.setText(intent.getStringExtra("charger"));
        tv_user = (TextView) findViewById(R.id.tv_user);
        tv_user.setText(intent.getStringExtra("name"));

        findViewById(R.id.iv_back).setOnClickListener(this);
        findViewById(R.id.line_page).setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.rl_user:
                Intent it_user = new Intent(DetailsActivity.this, EditContentActivity.class);
                it_user.putExtra("title", "编辑客户");
                it_user.putExtra("flag", 0);
                it_user.putExtra("id", intent.getStringExtra("id"));
                it_user.putExtra("content", tv_user.getText().toString());
                startActivityForResult(it_user, 0);
                break;
            case R.id.rl_charger:
                Intent it_charger = new Intent(DetailsActivity.this, EditContentActivity.class);
                it_charger.putExtra("title", "编辑负责人");
                it_charger.putExtra("flag", 1);
                it_charger.putExtra("id", intent.getStringExtra("id"));
                it_charger.putExtra("content", tv_charger.getText().toString());
                startActivityForResult(it_charger, 1);
                break;
            case R.id.rl_desc:
                Intent it_desc = new Intent(DetailsActivity.this, EditContentActivity.class);
                it_desc.putExtra("title", "编辑备注");
                it_desc.putExtra("flag", 2);
                it_desc.putExtra("id", intent.getStringExtra("id"));
                it_desc.putExtra("content", tv_desc.getText().toString());
                startActivityForResult(it_desc, 2);
                break;
            case R.id.rl_type:
                break;
            case R.id.rl_mark:
                break;
            case R.id.rl_record:
                break;
            case R.id.iv_back:
                //重新加载页面
                CustomerFragment.fragment.clearAllData();
                CustomerFragment.fragment.getData(1, "");
                finish();
                toFinish();
                break;
            case R.id.line_page:
                //让软键盘隐藏
                InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                imm.hideSoftInputFromWindow(v.getApplicationWindowToken(), 0);
                break;
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case 0:
                try {
                    tv_user.setText(data.getStringExtra("content"));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                break;
            case 1:
                try {
                    tv_charger.setText(data.getStringExtra("content"));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                break;
            case 2:
                try {
                    tv_desc.setText(data.getStringExtra("content"));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                break;
        }
    }

    public void Edit() {
        dialog = MyDialog.showDialog(DetailsActivity.this);
        dialog.show();
        //编辑
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    JSONObject json = new JSONObject();
                    json.put("id", intent.getStringExtra("id"));
                    json.put("mark", getState(m_mark));
                    json.put("desc", tv_desc.getText().toString());
                    json.put("charger", tv_charger.getText().toString());
                    json.put("name", tv_user.getText().toString());
                    json.put("type", getType(m_type));
                    OkHttpClient client = new OkHttpClient();
                    String url = "agentId=1&token=" + URLEncoder.encode(Token.gettoken(), "utf-8") + "&json=" + json.toString();
                    final MediaType mediaType = MediaType.parse("application/x-www-form-urlencoded");
                    RequestBody body = RequestBody.create(mediaType, url);
                    Request request = new Request.Builder()
                            .url(BaseUrl.BaseWang + "guestFromProbe/edit.action")
                            .post(body)
                            .addHeader("content-type", "application/x-www-form-urlencoded")
                            .build();

                    client.newCall(request).enqueue(new Callback() {
                        @Override
                        public void onFailure(Call call, IOException e) {

                        }

                        @Override
                        public void onResponse(Call call, Response response) throws IOException {
                            try {
                                JSONObject jsonObject = new JSONObject(response.body().string());
                                if (jsonObject.get("success").toString().equals("true")) {
                                    Message message = new Message();
                                    message.what = 1;
                                    message.obj = jsonObject.get("msg");
                                    handler.sendMessage(message);
                                } else {
                                    Message message = new Message();
                                    message.what = 2;
                                    message.obj = jsonObject.get("msg");
                                    handler.sendMessage(message);
                                }
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                    });
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }).start();
    }

    Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what) {
                case 1:
                    ToastUtils.showShort(DetailsActivity.this, msg.obj.toString());
                    //重新加载页面
                    CustomerFragment.fragment.clearAllData();
                    CustomerFragment.fragment.getData(1, "");
                    dialog.dismiss();
                    finish();
                    break;
                case 2:
                    ToastUtils.showShort(DetailsActivity.this, msg.obj.toString());
                    dialog.dismiss();
                    break;
            }
        }
    };

    public int getState(String str) {
        switch (str) {
            case "新转入":
                return 0;
            case "暂无意向":
                return 1;
            case "持续跟进":
                return 2;
            case "已成交":
                return 3;
        }
        return 0;
    }

    public int getType(String str) {
        switch (str) {
            case "普通客户":
                return 0;
            case "低价值客户":
                return 1;
            case "积极客户":
                return 2;
            case "高价值客户":
                return 3;
        }
        return 0;
    }

    public void showState(String type, String mark) {
        switch (type) {
            case "普通客户":
                rb_ordinary.setChecked(true);
                m_type = "普通客户";
                break;
            case "低价值客户":
                rb_low_value.setChecked(true);
                m_type = "低价值客户";
                break;
            case "积极客户":
                rb_positive.setChecked(true);
                m_type = "积极客户";
                break;
            case "高价值客户":
                rb_high_value.setChecked(true);
                m_type = "高价值客户";
                break;
        }
        switch (mark) {
            case "新转入":
                rb_new_turn.setChecked(true);
                m_mark = "新转入";
                break;
            case "暂无意向":
                rb_temporarily_not_to.setChecked(true);
                m_mark = "暂无意向";
                break;
            case "持续跟进":
                rb_continue_further.setChecked(true);
                m_mark = "持续跟进";
                break;
            case "已成交":
                rb_submitted.setChecked(true);
                m_mark = "已成交";
                break;
        }
    }

    @Override
    public void onBackPressed() {
        //重新加载页面
        CustomerFragment.fragment.clearAllData();
        CustomerFragment.fragment.getData(1, "");
        toFinish();
        finish();
    }

    //清空内存
    private void toFinish() {
        new Handler().postDelayed(new Runnable() {
            @Override
            public void run() {
                try {
                    m_mark = null;
                    m_type = null;
                    System.gc();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }, 500);
    }

}
